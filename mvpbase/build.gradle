apply plugin: 'com.android.library'

apply from:rootDir.absolutePath+"/android.gradle"

android {
    defaultConfig {
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(project(':httplib'))
    implementation(project(':utils'))
    implementation(project(':widget'))
    implementation(project(':context'))
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation 'com.just.agentweb:agentweb:4.1.2' // (必选)
    implementation 'com.just.agentweb:filechooser:4.1.2'// (可选)
    implementation 'com.download.library:Downloader:4.1.2'// (可选)


    api 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'

// If you want to bind to Android-specific lifecycles
    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.1.0'

// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'

// If you want pre-written support preference Fragments you can subclass as providers
    api 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.1.0'

// If you want to use Android Lifecycle for providers
    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
