apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: rootDir.path + '/android.gradle'
android {

    defaultConfig {
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'

    compile "com.wanjian:cockroach:0.0.5"


    implementation(project(':utils'))
    implementation(project(':mvpbase'))
    implementation(project(':context'))
    implementation(project(':httplib'))

    //rxandroid
    api "io.reactivex.rxjava2:rxandroid:${dep.rxAndroidVersion}"
    api "io.reactivex.rxjava2:rxjava:${dep.rxJavaVersion}"
    api "io.reactivex.rxjava2:rxkotlin:${dep.rxKotlinVersion}"

    // If you want to bind to Android-specific lifecycles
    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.1.0'

// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'

// If you want pre-written support preference Fragments you can subclass as providers
    api 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.1.0'

// If you want to use Android Lifecycle for providers
    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.1.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
