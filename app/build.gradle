apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from:rootDir.absolutePath+"/android.gradle"

sourceSets{
    main{
        java.srcDirs = ["src/main/kotlin","src/main/java"]
    }
}

android {
    defaultConfig {
        applicationId rootProject.ext.applicationId
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d03843bfe193d5c972e8cfc7", //JPush上注册的包名对应的appkey（*换成你的*）
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        multiDexEnabled true
    }

    signingConfigs{
        release {
            storeFile file("E:/ShopHall.jks")        //证书存放目录
            storePassword "originit123321"                               //密码
            keyAlias "ShopHall"                                                //别名
            keyPassword "originit123321"                                //密码(就是设置证书那两个密码，建议都填一样的)
        }
    }

    //分包2（高版本的gradle）
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
        additionalParameters = ['--multi-dex', '--main-dex-list=' + project.rootDir.absolutePath + '/app/maindexlist.txt', '--minimal-main-dex',
                                '--set-max-idx-number=1000']
    }

    buildTypes {
        release {
//            multiDexKeepFile file('maindexlist.txt')
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        debug {
//            multiDexKeepFile file('maindexlist.txt')
//        }
    }
    resourcePrefix ''

    sourceSets {
        main {
            if (!isDebug.toBoolean()) {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    if(!isDebug.toBoolean())
    {
        implementation(project(':main'))
        implementation(project(':mine'))
        implementation(project(':message'))
        implementation(project(':shopcar'))
    }
    implementation(project(':utils'))
    implementation(project(':joint'))
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    annotationProcessor "com.alibaba:arouter-compiler:${dep.routerAnnotationProcessor}"
    compile 'com.android.support:multidex:1.0.3'
    compile 'com.android.support:multidex-instrumentation:1.0.3'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //极光推送
    implementation 'cn.jiguang.sdk:jpush:3.1.5'
    implementation 'cn.jiguang.sdk:jcore:2.0.0'  // 此处以JCore 2.0.0 版本为例。
    implementation 'cn.jiguang.sdk:jmessage:2.9.0'  // 此处以JMessage 2.9.0 版本为例。
}
